apiVersion: apps/v1
kind: Deployment
metadata:
  name: platforms-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platformservice
  template:
    metadata:
      labels:
        app: platformservice
    spec:
      containers:
        - name: platformservice
          image: kylemorton5770/platformservice:latest
---
apiVersion: v1
kind: Service
metadata:
  name: platforms-clusterip-srv
spec:
  type: ClusterIP
  selector:
    app: platformservice
  ports:
  - name: platformservice
    protocol: TCP
    port: 8080 # inside the cluster
    targetPort: 8080 # # matching port on outside
  # - name: plafromgrpc
  #   protocol: TCP
  #   port: 666
  #   targetPort: 666

  # to create depl -> kubectl apply -f .\platforms-depl.yaml
  # to refresh running depl and force k8s to pull latest DH image -> kubectl rollout restart deployment platforms-depl
  # to get depls -> kubectl get deployments
  # to get pods (running our app) -> kubectl get pods
  # to get services (node port & cluster IPs) -> kubectl get services